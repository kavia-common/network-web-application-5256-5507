# Network Web Application - Example Environment Variables
# Copy this file to .env and adjust values for your environment.
# Do NOT commit your real .env to version control.

# ======================================
# MongoDB Configuration
# ======================================
# MongoDB connection string (required for real DB operations).
# In local development, you might use a local mongod or a cloud provider.
# Leave secrets out of source control; inject secure values in CI/CD or deployment.
MONGODB_URI=mongodb://localhost:27017

# Database name (default: network_devices)
MONGODB_DB=network_devices

# Collection name for devices (default: devices)
MONGODB_COLLECTION=devices

# ======================================
# Ping / Scheduler Configuration
# ======================================
# Enable periodic background ping checks for all devices.
# Accepted truthy: 1, true, yes, y (case-insensitive). Default: true
PING_ENABLED=true

# Interval between scheduled pings in seconds. Default: 300
PING_INTERVAL_SECONDS=300

# Timeout per ping in milliseconds. Default: 1000
PING_TIMEOUT_MS=1000

# ======================================
# App / Flask Server
# ======================================
# Flask server port when running python -m backend.app (default: 5000)
APP_PORT=5000

# Flask debug flag (default: false). Accepted truthy: 1, true, yes, y
FLASK_DEBUG=false

# Flask environment (default: production). Common values: development | production
FLASK_ENV=production

# Logging level for backend logs (default: INFO). Common values: DEBUG, INFO, WARNING, ERROR
LOG_LEVEL=INFO

# ======================================
# Notes & Guidance
# ======================================
# - This file is provided for reference. Do NOT include secrets (e.g., real MONGODB_URI with credentials) in version control.
# - For automated tests, the backend uses mongomock to mock MongoDB connections:
#     * See backend/tests/integration/conftest.py where get_collection is monkeypatched.
#     * Tests also set PING_ENABLED=false to avoid starting the scheduler.
# - Ensure that runtime environments (local, CI, staging, production) inject appropriate values securely.
# - Documentation reference:
#     * docs/ENV.md â€” detailed descriptions and defaults of these variables
# - Backend source of truth for parsing env values:
#     * backend/config.py
