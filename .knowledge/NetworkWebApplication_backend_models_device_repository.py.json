{"is_source_file": true, "format": "Python", "description": "This file provides CRUD operations and data access functions for managing 'device' entities in a MongoDB collection within a web application. It includes functions for listing, retrieving, creating, updating, and deleting device records, along with validation, serialization, and error handling.", "external_files": ["../services/db", "../services/validation"], "external_methods": ["get_collection", "validate_create", "validate_update", "DuplicateIPError"], "published": ["list_devices", "get_device_by_id", "create_device", "update_device", "delete_device"], "classes": [], "methods": [{"name": "Collection _get_devices_collection()", "description": "Retrieves the MongoDB collection for devices using a service function.", "scope": "", "scopeKind": ""}, {"name": "ObjectId _to_object_id(id_str: str)", "description": "Converts a string ID to a Mongo ObjectId, raising an error if invalid.", "scope": "", "scopeKind": ""}, {"name": "Optional[Dict[str,Any]] _serialize(doc: Optional[Dict[str, Any]])", "description": "Serializes a MongoDB document into a dictionary, converting _id to string id.", "scope": "", "scopeKind": ""}, {"name": "List[Dict[str,Any]] list_devices(filters: Optional[Dict[str, Any]] = None)", "description": "Returns a list of devices matching optional filters.", "scope": "", "scopeKind": ""}, {"name": "Optional[Dict[str,Any]] get_device_by_id(id: str)", "description": "Fetches a single device by its string ID.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] create_device(payload: Dict[str, Any])", "description": "Creates a new device record after validation, handles duplicate IP errors.", "scope": "", "scopeKind": ""}, {"name": "Optional[Dict[str,Any]] update_device(id: str, payload: Dict[str, Any])", "description": "Updates an existing device record atomically, validating input, supporting partial updates.", "scope": "", "scopeKind": ""}, {"name": "bool delete_device(id: str)", "description": "Deletes a device record by its ID.", "scope": "", "scopeKind": ""}], "calls": ["get_collection", "validate_create", "validate_update", "col.find", "col.find_one", "col.insert_one", "col.find_one_and_update", "col.delete_one"], "search-terms": ["device repository", "MongoDB CRUD", "device _serialize", "device filters", "device _to_object_id", "device create", "device update", "device delete"], "state": 2, "file_id": 25, "knowledge_revision": 52, "git_revision": "7c1f589d239582566f8896fcb94b921bfff38333", "ctags": [{"_type": "tag", "name": "_get_devices_collection", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/models/device_repository.py", "pattern": "/^def _get_devices_collection() -> Collection:$/", "language": "Python", "typeref": "typename:Collection", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_logger", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/models/device_repository.py", "pattern": "/^_logger = logging.getLogger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_serialize", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/models/device_repository.py", "pattern": "/^def _serialize(doc: Optional[Dict[str, Any]]) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "function", "signature": "(doc: Optional[Dict[str, Any]])"}, {"_type": "tag", "name": "_to_object_id", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/models/device_repository.py", "pattern": "/^def _to_object_id(id_str: str) -> ObjectId:$/", "language": "Python", "typeref": "typename:ObjectId", "kind": "function", "signature": "(id_str: str)"}, {"_type": "tag", "name": "create_device", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/models/device_repository.py", "pattern": "/^def create_device(payload: Dict[str, Any]) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(payload: Dict[str, Any])"}, {"_type": "tag", "name": "delete_device", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/models/device_repository.py", "pattern": "/^def delete_device(id: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(id: str)"}, {"_type": "tag", "name": "get_device_by_id", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/models/device_repository.py", "pattern": "/^def get_device_by_id(id: str) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "function", "signature": "(id: str)"}, {"_type": "tag", "name": "list_devices", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/models/device_repository.py", "pattern": "/^def list_devices(filters: Optional[Dict[str, Any]] = None) -> List[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "function", "signature": "(filters: Optional[Dict[str, Any]] = None)"}, {"_type": "tag", "name": "update_device", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/models/device_repository.py", "pattern": "/^def update_device(id: str, payload: Dict[str, Any]) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "function", "signature": "(id: str, payload: Dict[str, Any])"}], "hash": "fa57665550d158a0635c49f393db4446", "format-version": 4, "code-base-name": "NetworkWebApplication", "filename": "NetworkWebApplication/backend/models/device_repository.py", "fields": [{"name": "_logger = logging.getLogger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"52": "7c1f589d239582566f8896fcb94b921bfff38333"}]}