{"is_source_file": true, "format": "Python", "description": "This is a test module implementing integration tests for the Devices API endpoints in a web application, using pytest. The tests cover device listing, creation, validation errors, conflict errors, full CRUD operations, and error handling.", "external_files": ["pytest"], "external_methods": ["client.get", "client.post", "client.patch", "client.put", "client.delete"], "published": [], "classes": [], "methods": [{"name": "test_list_devices_initially_empty(client)", "description": "Tests that the GET /api/devices returns an empty list initially.", "scope": "", "scopeKind": ""}, {"name": "test_create_device_success(client)", "description": "Tests successful creation of a new device via POST /api/devices.", "scope": "", "scopeKind": ""}, {"name": "test_create_device_validation_error(client)", "description": "Tests validation error response when creating a device with invalid data.", "scope": "", "scopeKind": ""}, {"name": "test_create_duplicate_ip_conflict(client)", "description": "Tests conflict detection when creating a device with a duplicate IP address.", "scope": "", "scopeKind": ""}, {"name": "test_get_update_patch_delete_flow(client)", "description": "Performs a full CRUD flow including get, update, patch, delete, and error cases on device resources.", "scope": "", "scopeKind": ""}], "calls": ["client.get", "client.post", "client.patch", "client.put", "client.delete"], "search-terms": ["test_devices_api", "integration", "pytest", "device API", "CRUD testing", "device creation", "device validation", "conflict detection"], "state": 2, "file_id": 52, "knowledge_revision": 111, "git_revision": "", "ctags": [{"_type": "tag", "name": "test_create_device_success", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/tests/integration/test_devices_api.py", "pattern": "/^def test_create_device_success(client):$/", "language": "Python", "kind": "function", "signature": "(client)"}, {"_type": "tag", "name": "test_create_device_validation_error", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/tests/integration/test_devices_api.py", "pattern": "/^def test_create_device_validation_error(client):$/", "language": "Python", "kind": "function", "signature": "(client)"}, {"_type": "tag", "name": "test_create_duplicate_ip_conflict", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/tests/integration/test_devices_api.py", "pattern": "/^def test_create_duplicate_ip_conflict(client):$/", "language": "Python", "kind": "function", "signature": "(client)"}, {"_type": "tag", "name": "test_get_update_patch_delete_flow", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/tests/integration/test_devices_api.py", "pattern": "/^def test_get_update_patch_delete_flow(client):$/", "language": "Python", "kind": "function", "signature": "(client)"}, {"_type": "tag", "name": "test_list_devices_initially_empty", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/tests/integration/test_devices_api.py", "pattern": "/^def test_list_devices_initially_empty(client):$/", "language": "Python", "kind": "function", "signature": "(client)"}], "hash": "9eb478aa086fd2b8672facc2aa192704", "format-version": 4, "code-base-name": "NetworkWebApplication", "filename": "NetworkWebApplication/backend/tests/integration/test_devices_api.py", "revision_history": [{"111": ""}]}