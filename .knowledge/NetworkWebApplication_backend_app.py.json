{"is_source_file": true, "format": "Python", "description": "The file 'app.py' sets up a Flask web application, configuring static file serving, API endpoints, database initialization, logging, and CORS support. It serves as the main entry point for the backend of a web application, defining routes, resources, and application configuration.", "external_files": ["./config.py", "./utils/responses.py", "./utils/logging_config.py", "./services/db.py", "./resources/devices.py"], "external_methods": ["get_config", "success", "error", "configure_logging", "ensure_indexes"], "published": ["create_app", "run"], "classes": [{"name": "HealthResource", "description": "A RESTful resource providing a health check endpoint that returns application status and configuration info."}], "methods": [{"name": "Flask create_app()", "description": "Creates and configures a Flask application instance with static file serving, CORS, API, database, and resource setup.", "scope": "", "scopeKind": ""}, {"name": "run()", "description": "Runs the Flask development server using the application's configuration.", "scope": "", "scopeKind": ""}, {"name": "api_index()", "scope": "create_app", "scopeKind": "function", "description": "unavailable"}, {"name": "get(self)", "scope": "create_app.HealthResource", "scopeKind": "class", "description": "unavailable"}, {"name": "serve_react_app(path: str)", "scope": "create_app", "scopeKind": "function", "description": "unavailable"}], "calls": ["configure_logging()", "ensure_indexes()", "CORS(app, resources={r\"/api/*\": {\"origins\": \"*\"}})", "api.add_resource(HealthResource, \"/health\", endpoint=\"health\")", "api.add_resource(DevicesListResource, \"/devices\", endpoint=\"devices_list\")", "api.add_resource(DeviceResource, \"/devices/<string:device_id>\", endpoint=\"device_detail\")", "send_from_directory(app.static_folder, path)", "send_from_directory(app.static_folder, \"index.html\")", "jsonify(success({ ... }))", "get_config()", "logging.getLogger(__name__).error(...)", "logging.getLogger(__name__).info(...)"], "search-terms": ["Flask application setup", "API resource registration", "static frontend serving", "database index initialization", "health check endpoint", "CORS configuration"], "state": 2, "file_id": 20, "knowledge_revision": 55, "git_revision": "5cf34c1678da5aeabd1114de480268418ae37d8d", "revision_history": [{"43": "4ef45cd67e9fafa8d479916e615b25deed1fc698"}, {"48": "aabc4c961c52f477d248109209ce6e66d7d5e05f"}, {"55": "5cf34c1678da5aeabd1114de480268418ae37d8d"}], "ctags": [{"_type": "tag", "name": "HealthResource", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/app.py", "pattern": "/^    class HealthResource(Resource):$/", "file": true, "language": "Python", "kind": "class", "scope": "create_app", "scopeKind": "function"}, {"_type": "tag", "name": "api_index", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/app.py", "pattern": "/^    def api_index():$/", "file": true, "language": "Python", "kind": "function", "signature": "()", "scope": "create_app", "scopeKind": "function"}, {"_type": "tag", "name": "create_app", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/app.py", "pattern": "/^def create_app() -> Flask:$/", "language": "Python", "typeref": "typename:Flask", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/app.py", "pattern": "/^        def get(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "create_app.HealthResource", "scopeKind": "class"}, {"_type": "tag", "name": "run", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/app.py", "pattern": "/^def run():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "serve_react_app", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/app.py", "pattern": "/^    def serve_react_app(path: str):$/", "file": true, "language": "Python", "kind": "function", "signature": "(path: str)", "scope": "create_app", "scopeKind": "function"}], "hash": "fef1aa63a7289cdfacac238af41900b7", "format-version": 4, "code-base-name": "NetworkWebApplication", "filename": "NetworkWebApplication/backend/app.py"}