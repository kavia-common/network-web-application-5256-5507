{"is_source_file": true, "format": "Python", "description": "The file `app.py` defines the main Flask web application setup, including configuration, route definitions, resource registration, static file serving, background scheduler initialization, and health check endpoints. It serves as the core entry point for the backend of a web application using Flask and associated extensions.", "external_files": [".config", ".utils.responses", ".utils.logging_config", ".services.db", ".services.scheduler", ".resources.devices", ".resources.status"], "external_methods": ["get_config", "success", "error", "configure_logging", "ensure_indexes", "init_scheduler", "shutdown_scheduler", "DevicesListResource", "DeviceResource", "DeviceStatusResource"], "published": ["run", "create_app"], "classes": [{"name": "HealthResource", "description": "A Flask-RESTful Resource for health check; returns application uptime and ping status."}], "methods": [{"name": "Flask create_app()", "description": "Creates and configures the Flask app instance, sets up routes, resources, static serving, background scheduler, and health endpoints.", "scope": "", "scopeKind": ""}, {"name": "serve_react_app(path: str)", "description": "Route handler to serve the React frontend build or fallback message if not present.", "scope": "create_app", "scopeKind": "function"}, {"name": "api_index()", "description": "Provides a JSON overview of available API endpoints.", "scope": "create_app", "scopeKind": "function"}, {"name": "_teardown_scheduler(exception)", "scope": "create_app", "scopeKind": "function", "description": "unavailable"}, {"name": "get(self)", "scope": "create_app.HealthResource", "scopeKind": "class", "description": "unavailable"}, {"name": "run()", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["os.path.abspath", "os.path.join", "os.path.isdir", "os.path.isfile", "logging.getLogger", "send_from_directory", "jsonify", "get_config", "configure_logging", "ensure_indexes", "init_scheduler", "shutdown_scheduler", "api.add_resource", "app.teardown_appcontext", "app.route"], "search-terms": ["Flask application setup", "background scheduler", "static file serving", "health resource", "API route registration", "frontend build static folder", "CORS configuration", "ensure indexes", "scheduler initialization", "resources import"], "state": 2, "file_id": 20, "knowledge_revision": 63, "git_revision": "1623f9695b64178c03e8f36695ebf31eee95a50f", "revision_history": [{"43": "4ef45cd67e9fafa8d479916e615b25deed1fc698"}, {"48": "aabc4c961c52f477d248109209ce6e66d7d5e05f"}, {"55": "5cf34c1678da5aeabd1114de480268418ae37d8d"}, {"60": "1623f9695b64178c03e8f36695ebf31eee95a50f"}, {"63": "1623f9695b64178c03e8f36695ebf31eee95a50f"}], "ctags": [{"_type": "tag", "name": "HealthResource", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/app.py", "pattern": "/^    class HealthResource(Resource):$/", "file": true, "language": "Python", "kind": "class", "scope": "create_app", "scopeKind": "function"}, {"_type": "tag", "name": "_teardown_scheduler", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/app.py", "pattern": "/^    def _teardown_scheduler(exception):  # noqa: ARG001$/", "file": true, "language": "Python", "kind": "function", "signature": "(exception)", "scope": "create_app", "scopeKind": "function"}, {"_type": "tag", "name": "api_index", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/app.py", "pattern": "/^    def api_index():$/", "file": true, "language": "Python", "kind": "function", "signature": "()", "scope": "create_app", "scopeKind": "function"}, {"_type": "tag", "name": "create_app", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/app.py", "pattern": "/^def create_app() -> Flask:$/", "language": "Python", "typeref": "typename:Flask", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/app.py", "pattern": "/^        def get(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "create_app.HealthResource", "scopeKind": "class"}, {"_type": "tag", "name": "run", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/app.py", "pattern": "/^def run():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "serve_react_app", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/app.py", "pattern": "/^    def serve_react_app(path: str):$/", "file": true, "language": "Python", "kind": "function", "signature": "(path: str)", "scope": "create_app", "scopeKind": "function"}], "hash": "a673f6d95016e9dea106e0e01d9f4674", "format-version": 4, "code-base-name": "NetworkWebApplication", "filename": "NetworkWebApplication/backend/app.py"}