{"is_source_file": true, "format": "Python", "description": "This is the main application source file for a Flask-based web backend that sets up routes, API resources, static file serving, CORS, background scheduler, and configuration.", "external_files": [".config", ".utils.responses", ".utils.logging_config", ".services.db", ".services.scheduler", ".resources.devices", ".resources.status"], "external_methods": ["get_config", "success", "error", "configure_logging", "ensure_indexes", "init_scheduler", "shutdown_scheduler"], "published": ["create_app", "run"], "classes": [{"name": "HealthResource", "description": "A Flask-RESTful resource providing a health check endpoint returning API status."}], "methods": [{"name": "Flask create_app()", "description": "Creates and configures the Flask application, including API routes, static file serving, CORS, background tasks, and event handlers.", "scope": "", "scopeKind": ""}, {"name": "run()", "description": "Starts the Flask development server with the application's configuration settings.", "scope": "", "scopeKind": ""}, {"name": "_teardown_scheduler(exception)", "scope": "create_app", "scopeKind": "function", "description": "unavailable"}, {"name": "api_index()", "scope": "create_app", "scopeKind": "function", "description": "unavailable"}, {"name": "get(self)", "scope": "create_app.HealthResource", "scopeKind": "class", "description": "unavailable"}, {"name": "serve_react_app(path: str)", "scope": "create_app", "scopeKind": "function", "description": "unavailable"}, {"name": "serve_static_assets(filename: str)", "scope": "create_app", "scopeKind": "function", "description": "unavailable"}], "calls": ["configure_logging()", "os.path.abspath()", "os.path.join()", "os.path.isdir()", "os.path.isfile()", "get_config()", "ensure_indexes()", "init_scheduler()", "shutdown_scheduler()", "logging.getLogger()", "app.teardown_appcontext()", "api.add_resource()", "send_from_directory()"], "search-terms": ["Flask app setup", "static file serving", "API resource registration", "Background scheduler", "SPA routing", "CORS configuration", "Health check endpoint", "app factory pattern"], "state": 2, "file_id": 20, "knowledge_revision": 64, "git_revision": "70340fe86a4c93be13aeaf51ccda1a9579b67e52", "revision_history": [{"43": "4ef45cd67e9fafa8d479916e615b25deed1fc698"}, {"48": "aabc4c961c52f477d248109209ce6e66d7d5e05f"}, {"55": "5cf34c1678da5aeabd1114de480268418ae37d8d"}, {"60": "1623f9695b64178c03e8f36695ebf31eee95a50f"}, {"63": "1623f9695b64178c03e8f36695ebf31eee95a50f"}, {"64": "70340fe86a4c93be13aeaf51ccda1a9579b67e52"}], "ctags": [{"_type": "tag", "name": "HealthResource", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/app.py", "pattern": "/^    class HealthResource(Resource):$/", "file": true, "language": "Python", "kind": "class", "scope": "create_app", "scopeKind": "function"}, {"_type": "tag", "name": "_teardown_scheduler", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/app.py", "pattern": "/^    def _teardown_scheduler(exception):  # noqa: ARG001$/", "file": true, "language": "Python", "kind": "function", "signature": "(exception)", "scope": "create_app", "scopeKind": "function"}, {"_type": "tag", "name": "api_index", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/app.py", "pattern": "/^    def api_index():$/", "file": true, "language": "Python", "kind": "function", "signature": "()", "scope": "create_app", "scopeKind": "function"}, {"_type": "tag", "name": "create_app", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/app.py", "pattern": "/^def create_app() -> Flask:$/", "language": "Python", "typeref": "typename:Flask", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/app.py", "pattern": "/^        def get(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "create_app.HealthResource", "scopeKind": "class"}, {"_type": "tag", "name": "run", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/app.py", "pattern": "/^def run():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "serve_react_app", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/app.py", "pattern": "/^    def serve_react_app(path: str):$/", "file": true, "language": "Python", "kind": "function", "signature": "(path: str)", "scope": "create_app", "scopeKind": "function"}, {"_type": "tag", "name": "serve_static_assets", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/app.py", "pattern": "/^    def serve_static_assets(filename: str):$/", "file": true, "language": "Python", "kind": "function", "signature": "(filename: str)", "scope": "create_app", "scopeKind": "function"}], "hash": "6b2aaa89cf629169d8a451406b40e65b", "format-version": 4, "code-base-name": "NetworkWebApplication", "filename": "NetworkWebApplication/backend/app.py"}