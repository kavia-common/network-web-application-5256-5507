{"is_source_file": true, "format": "Python", "description": "This file is a Flask web application setup script. It configures the Flask app, registers RESTful API resources for health checks, device management, and status, sets up CORS, logging, scheduler initialization, and database index ensures. It also defines a run function to start the development server.", "external_files": ["./config", "./utils/responses", "./utils/logging_config", "./services/db", "./services/scheduler", "./resources/devices", "./resources/status"], "external_methods": ["get_config", "success", "configure_logging", "ensure_indexes", "init_scheduler", "shutdown_scheduler"], "published": ["create_app", "run"], "classes": [{"name": "HealthResource", "description": "A simple RESTful resource for health check endpoint, returning status info including uptime and ping enable status."}], "methods": [{"name": "Flask create_app()", "description": "Creates and configures the Flask application, setting up API routes, CORS, background scheduler, and initializing indexes and logging.", "scope": "", "scopeKind": ""}, {"name": "run()", "description": "Runs the Flask development server using configuration from environment variables.", "scope": "", "scopeKind": ""}, {"name": "_teardown_scheduler(exception)", "scope": "create_app", "scopeKind": "function", "description": "unavailable"}, {"name": "api_index()", "scope": "create_app", "scopeKind": "function", "description": "unavailable"}, {"name": "get(self)", "scope": "create_app.HealthResource", "scopeKind": "class", "description": "unavailable"}], "calls": ["configure_logging()", "get_config()", "CORS(app, resources={r\"/api/*\": {\"origins\": cors_origins}})", "ensure_indexes()", "init_scheduler()", "shutdown_scheduler()", "logging.getLogger(__name__).error()", "logging.getLogger(__name__).warning()", "api.add_resource()", "app.route()", "jsonify(success(...))", "app.run()"], "search-terms": ["Flask app setup", "API route registration", "background scheduler", "CORS configuration", "health check resource", "device management API", "app teardown scheduler"], "state": 2, "file_id": 20, "knowledge_revision": 127, "git_revision": "a16a57e189d73a0b98ee6538b0713edfb941c395", "revision_history": [{"43": "4ef45cd67e9fafa8d479916e615b25deed1fc698"}, {"48": "aabc4c961c52f477d248109209ce6e66d7d5e05f"}, {"55": "5cf34c1678da5aeabd1114de480268418ae37d8d"}, {"60": "1623f9695b64178c03e8f36695ebf31eee95a50f"}, {"63": "1623f9695b64178c03e8f36695ebf31eee95a50f"}, {"64": "70340fe86a4c93be13aeaf51ccda1a9579b67e52"}, {"127": "a16a57e189d73a0b98ee6538b0713edfb941c395"}], "ctags": [{"_type": "tag", "name": "HealthResource", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/app.py", "pattern": "/^    class HealthResource(Resource):$/", "file": true, "language": "Python", "kind": "class", "scope": "create_app", "scopeKind": "function"}, {"_type": "tag", "name": "_teardown_scheduler", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/app.py", "pattern": "/^    def _teardown_scheduler(exception):  # noqa: ARG001$/", "file": true, "language": "Python", "kind": "function", "signature": "(exception)", "scope": "create_app", "scopeKind": "function"}, {"_type": "tag", "name": "api_index", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/app.py", "pattern": "/^    def api_index():$/", "file": true, "language": "Python", "kind": "function", "signature": "()", "scope": "create_app", "scopeKind": "function"}, {"_type": "tag", "name": "create_app", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/app.py", "pattern": "/^def create_app() -> Flask:$/", "language": "Python", "typeref": "typename:Flask", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/app.py", "pattern": "/^        def get(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "create_app.HealthResource", "scopeKind": "class"}, {"_type": "tag", "name": "run", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/app.py", "pattern": "/^def run():$/", "language": "Python", "kind": "function", "signature": "()"}], "hash": "99a80eec9dff4c906a2630fc645a6e81", "format-version": 4, "code-base-name": "NetworkWebApplication", "filename": "NetworkWebApplication/backend/app.py"}