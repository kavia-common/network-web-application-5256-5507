{"is_source_file": true, "format": "Python", "description": "This is a Python source file defining database connection utilities and index management functions for a MongoDB-backed web application. It handles singleton initialization of database and collection objects, and provides functions to access these objects and ensure proper indexes are in place.", "external_files": ["../config"], "external_methods": ["get_config"], "published": ["get_db", "get_collection", "ensure_indexes"], "classes": [], "methods": [{"name": "MongoClient _init_client()", "description": "Initializes and returns a singleton MongoClient, configured via environment variables.", "scope": "", "scopeKind": ""}, {"name": "Database _init_db()", "description": "Initializes and returns a singleton MongoDB Database instance.", "scope": "", "scopeKind": ""}, {"name": "Database get_db()", "description": "Public function to obtain a MongoDB Database instance.", "scope": "", "scopeKind": ""}, {"name": "Collection get_collection(name: Optional[str] = None)", "description": "Returns a MongoDB Collection object, either specified explicitly or via environment config.", "scope": "", "scopeKind": ""}, {"name": "None ensure_indexes()", "description": "Creates necessary indexes on the collection for efficient queries and enforces uniqueness where needed.", "scope": "", "scopeKind": ""}], "calls": ["get_config", "MongoClient.__init__", "get_db", "Collection.create_index"], "search-terms": ["MongoDB client singleton", "ensure Mongo indexes", "database connection Python", "collection index setup", "database configuration env"], "state": 2, "file_id": 23, "knowledge_revision": 47, "git_revision": "", "ctags": [{"_type": "tag", "name": "_client", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/services/db.py", "pattern": "/^_client: Optional[MongoClient] = None$/", "language": "Python", "typeref": "typename:Optional[MongoClient]", "kind": "variable"}, {"_type": "tag", "name": "_collection", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/services/db.py", "pattern": "/^_collection: Optional[Collection] = None$/", "language": "Python", "typeref": "typename:Optional[Collection]", "kind": "variable"}, {"_type": "tag", "name": "_db", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/services/db.py", "pattern": "/^_db: Optional[Database] = None$/", "language": "Python", "typeref": "typename:Optional[Database]", "kind": "variable"}, {"_type": "tag", "name": "_init_client", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/services/db.py", "pattern": "/^def _init_client() -> MongoClient:$/", "language": "Python", "typeref": "typename:MongoClient", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_init_db", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/services/db.py", "pattern": "/^def _init_db() -> Database:$/", "language": "Python", "typeref": "typename:Database", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_logger", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/services/db.py", "pattern": "/^_logger = logging.getLogger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ensure_indexes", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/services/db.py", "pattern": "/^def ensure_indexes() -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_collection", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/services/db.py", "pattern": "/^def get_collection(name: Optional[str] = None) -> Collection:$/", "language": "Python", "typeref": "typename:Collection", "kind": "function", "signature": "(name: Optional[str] = None)"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/services/db.py", "pattern": "/^def get_db() -> Database:$/", "language": "Python", "typeref": "typename:Database", "kind": "function", "signature": "()"}], "hash": "dab1fda1728c1206aab6a1f546e4c9d2", "format-version": 4, "code-base-name": "NetworkWebApplication", "filename": "NetworkWebApplication/backend/services/db.py", "fields": [{"name": "Optional[MongoClient] _client", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[Collection] _collection", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[Database] _db", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "_logger = logging.getLogger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"47": ""}]}