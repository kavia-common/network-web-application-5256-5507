{"is_source_file": true, "format": "Python", "description": "This Python source file defines a function to ping an IP address, report its status (online/offline), latency, and timestamp. It uses the 'pythonping' library to perform ICMP pings and handles exceptions to ensure robustness.", "external_files": ["pythonping"], "external_methods": ["ping"], "published": ["ping_ip"], "classes": [], "methods": [{"name": "Dict[str,object] ping_ip(ip_address: str, timeout_ms: int)", "description": "Pings an IP address with a specified timeout and returns status, latency, and timestamp.", "scope": "", "scopeKind": ""}], "calls": ["ping", "datetime.utcnow"], "search-terms": ["ping_ip", "ICMP ping", "pythonping", "latency", "ping timeout"], "state": 2, "file_id": 27, "knowledge_revision": 57, "git_revision": "", "ctags": [{"_type": "tag", "name": "_logger", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/services/ping.py", "pattern": "/^_logger = logging.getLogger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ping_ip", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/services/ping.py", "pattern": "/^def ping_ip(ip_address: str, timeout_ms: int) -> Dict[str, object]:$/", "language": "Python", "typeref": "typename:Dict[str,object]", "kind": "function", "signature": "(ip_address: str, timeout_ms: int)"}], "hash": "f162dbf3d69c30c4e91629058fd1c7a7", "format-version": 4, "code-base-name": "NetworkWebApplication", "filename": "NetworkWebApplication/backend/services/ping.py", "fields": [{"name": "_logger = logging.getLogger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"57": ""}]}