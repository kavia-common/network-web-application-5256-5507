{"is_source_file": true, "format": "Python", "description": "This file defines RESTful API resources for managing devices in a network web application, including listing, creating, retrieving, updating, and deleting device records through Flask-RESTful resources.", "external_files": ["../models", "../services/validation", "../utils/responses"], "external_methods": ["repo.list_devices", "repo.create_device", "repo.get_device_by_id", "repo.update_device", "repo.delete_device", "validate_create", "validate_update", "success", "error"], "published": ["DevicesListResource", "DeviceResource"], "classes": [{"name": "DevicesListResource", "description": "Resource for operations on the collection of devices, supporting listing and creation."}, {"name": "DeviceResource", "description": "Resource for operations on individual device entities, supporting retrieval, update, partial update, and deletion."}], "methods": [{"name": "get(self)", "description": "Handles GET requests to list devices with optional filters based on query parameters.", "scope": "DevicesListResource", "scopeKind": "class"}, {"name": "post(self)", "description": "Handles POST requests to create a new device after validation, preventing duplicate IP addresses.", "scope": "DevicesListResource", "scopeKind": "class"}, {"name": "get(self, device_id: str)", "description": "Handles GET requests to retrieve a device by its ID.", "scope": "DeviceResource", "scopeKind": "class"}, {"name": "put(self, device_id: str)", "description": "Handles PUT requests to fully update a device by ID, with validation and duplicate IP checks.", "scope": "DeviceResource", "scopeKind": "class"}, {"name": "patch(self, device_id: str)", "description": "Handles PATCH requests for partial updates of a device.", "scope": "DeviceResource", "scopeKind": "class"}, {"name": "_update(self, device_id: str, method: str = \"PATCH\")", "description": "Internal helper method to handle shared logic for PUT and PATCH updates.", "scope": "DeviceResource", "scopeKind": "class"}, {"name": "delete(self, device_id: str)", "description": "Handles DELETE requests to remove a device by ID.", "scope": "DeviceResource", "scopeKind": "class"}], "calls": ["repo.list_devices", "repo.create_device", "repo.get_device_by_id", "repo.update_device", "repo.delete_device", "validate_create", "validate_update", "success", "error"], "search-terms": ["devices API", "device management", "RESTful resources", "Flask-RESTful", "device collection", "individual device", "validation errors", "duplicate IP", "device filters", "device CRUD"], "state": 2, "file_id": 26, "knowledge_revision": 54, "git_revision": "", "ctags": [{"_type": "tag", "name": "DeviceResource", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/resources/devices.py", "pattern": "/^class DeviceResource(Resource):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "DevicesListResource", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/resources/devices.py", "pattern": "/^class DevicesListResource(Resource):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_logger", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/resources/devices.py", "pattern": "/^_logger = logging.getLogger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_update", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/resources/devices.py", "pattern": "/^    def _update(self, device_id: str, method: str = \"PATCH\"):$/", "language": "Python", "kind": "member", "signature": "(self, device_id: str, method: str = \"PATCH\")", "scope": "DeviceResource", "scopeKind": "class"}, {"_type": "tag", "name": "delete", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/resources/devices.py", "pattern": "/^    def delete(self, device_id: str):$/", "language": "Python", "kind": "member", "signature": "(self, device_id: str)", "scope": "DeviceResource", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/resources/devices.py", "pattern": "/^    def get(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "DevicesListResource", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/resources/devices.py", "pattern": "/^    def get(self, device_id: str):$/", "language": "Python", "kind": "member", "signature": "(self, device_id: str)", "scope": "DeviceResource", "scopeKind": "class"}, {"_type": "tag", "name": "patch", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/resources/devices.py", "pattern": "/^    def patch(self, device_id: str):$/", "language": "Python", "kind": "member", "signature": "(self, device_id: str)", "scope": "DeviceResource", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/resources/devices.py", "pattern": "/^    def post(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "DevicesListResource", "scopeKind": "class"}, {"_type": "tag", "name": "put", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/resources/devices.py", "pattern": "/^    def put(self, device_id: str):$/", "language": "Python", "kind": "member", "signature": "(self, device_id: str)", "scope": "DeviceResource", "scopeKind": "class"}, {"_type": "tag", "name": "repo", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/resources/devices.py", "pattern": "/^from ..models import device_repository as repo$/", "language": "Python", "kind": "unknown", "nameref": "unknown:device_repository"}], "hash": "334bf1adc81355157b9cc9e98561433c", "format-version": 4, "code-base-name": "NetworkWebApplication", "filename": "NetworkWebApplication/backend/resources/devices.py", "fields": [{"name": "_logger = logging.getLogger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"54": ""}]}