{"is_source_file": true, "format": "Python", "description": "Unit test cases for the device repository module, testing CRUD operations, filtering, handling duplicates, and error scenarios.", "external_files": ["backend.models.device_repository", "backend.services.validation", "backend.tests.integration.conftest"], "external_methods": ["repo.create_device", "repo.get_device_by_id", "repo.list_devices", "repo.update_device", "repo.delete_device"], "published": [], "classes": [], "methods": [{"name": "sample_device_payload()", "description": "Fixture providing a sample device data payload for tests.", "scope": "", "scopeKind": ""}, {"name": "test_create_and_get_device(mock_collection, sample_device_payload, monkeypatch)", "description": "Tests creating a device and retrieving it by ID.", "scope": "", "scopeKind": ""}, {"name": "test_list_devices_filters(mock_collection, sample_device_payload)", "description": "Tests listing devices with and without filters.", "scope": "", "scopeKind": ""}, {"name": "test_duplicate_ip_handling_on_create(mock_collection, sample_device_payload)", "description": "Ensures duplicate IP addresses cannot be created.", "scope": "", "scopeKind": ""}, {"name": "test_update_device_and_duplicate_on_update(mock_collection)", "description": "Tests updating device data and handling of duplicate IP on update.", "scope": "", "scopeKind": ""}, {"name": "test_delete_device(mock_collection)", "description": "Tests device deletion and behavior when deleting non-existent device.", "scope": "", "scopeKind": ""}, {"name": "test_invalid_objectid_raises_valueerror_on_get_and_delete(mock_collection)", "description": "Verifies errors are raised when invalid ObjectId strings are used.", "scope": "", "scopeKind": ""}], "calls": ["repo.create_device", "repo.get_device_by_id", "repo.list_devices", "repo.update_device", "repo.delete_device"], "search-terms": ["unit tests", "device repository", "pytest", "duplicate IP", "MongoDB ObjectId", "device CRUD"], "state": 2, "file_id": 51, "knowledge_revision": 109, "git_revision": "", "ctags": [{"_type": "tag", "name": "repo", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/tests/unit/test_device_repository.py", "pattern": "/^from backend.models import device_repository as repo$/", "language": "Python", "kind": "unknown", "nameref": "unknown:device_repository"}, {"_type": "tag", "name": "sample_device_payload", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/tests/unit/test_device_repository.py", "pattern": "/^def sample_device_payload():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "test_create_and_get_device", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/tests/unit/test_device_repository.py", "pattern": "/^def test_create_and_get_device(mock_collection, sample_device_payload, monkeypatch):$/", "language": "Python", "kind": "function", "signature": "(mock_collection, sample_device_payload, monkeypatch)"}, {"_type": "tag", "name": "test_delete_device", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/tests/unit/test_device_repository.py", "pattern": "/^def test_delete_device(mock_collection):$/", "language": "Python", "kind": "function", "signature": "(mock_collection)"}, {"_type": "tag", "name": "test_duplicate_ip_handling_on_create", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/tests/unit/test_device_repository.py", "pattern": "/^def test_duplicate_ip_handling_on_create(mock_collection, sample_device_payload):$/", "language": "Python", "kind": "function", "signature": "(mock_collection, sample_device_payload)"}, {"_type": "tag", "name": "test_invalid_objectid_raises_valueerror_on_get_and_delete", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/tests/unit/test_device_repository.py", "pattern": "/^def test_invalid_objectid_raises_valueerror_on_get_and_delete(mock_collection):$/", "language": "Python", "kind": "function", "signature": "(mock_collection)"}, {"_type": "tag", "name": "test_list_devices_filters", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/tests/unit/test_device_repository.py", "pattern": "/^def test_list_devices_filters(mock_collection, sample_device_payload):$/", "language": "Python", "kind": "function", "signature": "(mock_collection, sample_device_payload)"}, {"_type": "tag", "name": "test_update_device_and_duplicate_on_update", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/tests/unit/test_device_repository.py", "pattern": "/^def test_update_device_and_duplicate_on_update(mock_collection):$/", "language": "Python", "kind": "function", "signature": "(mock_collection)"}], "hash": "e01258dabecacf9757bfbe393ac34720", "format-version": 4, "code-base-name": "NetworkWebApplication", "filename": "NetworkWebApplication/backend/tests/unit/test_device_repository.py", "revision_history": [{"109": ""}]}