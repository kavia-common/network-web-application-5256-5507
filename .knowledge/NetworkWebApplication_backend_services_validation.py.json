{"is_source_file": true, "format": "Python", "description": "This is a Python source file providing validation and normalization utilities for device payloads, typically used in API handling for a network management application. It defines helper functions, validation logic, exception classes, and constants related to device data such as name, IP address, device type, and location.", "external_files": ["typing", "ipaddress"], "external_methods": ["ipaddress.IPv4Address"], "published": ["ValidationError", "DuplicateIPError", "normalize_payload", "validate_create", "validate_update"], "classes": [{"name": "ValidationError", "description": "Raised when payload validation fails with message suitable for API responses."}, {"name": "DuplicateIPError", "description": "Raised when attempting to create/update a device using an already-registered IP address."}], "methods": [{"name": "bool _is_valid_ipv4(ip: str)", "description": "Checks if a string is a valid IPv4 address using the ipaddress library.", "scope": "", "scopeKind": ""}, {"name": "str _clean_str(value: Any, max_len: Optional[int] = None)", "description": "Converts a value to string, trims whitespace, and enforces optional maximum length.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] normalize_payload(payload: Dict[str, Any])", "description": "Normalizes incoming device payloads by trimming whitespace, lowercasing device_type, and other standardizations.", "scope": "", "scopeKind": ""}, {"name": "Tuple[Dict[str,Any],Dict[str,str]] _validate_common(data: Dict[str, Any], require_all_fields: bool)", "description": "Validates common device fields for create and update operations, returning cleaned data and errors.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] validate_create(payload: Dict[str, Any])", "description": "Validates and sanitizes payload for creating a new device, checking required fields.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] validate_update(payload: Dict[str, Any])", "description": "Validates and sanitizes payload for updating an existing device, allowing partial updates.", "scope": "", "scopeKind": ""}, {"name": "bool require(field: str)", "scope": "_validate_common", "scopeKind": "function", "description": "unavailable"}], "calls": ["ipaddress.IPv4Address", "_is_valid_ipv4", "_clean_str"], "search-terms": ["validation.py", "device payload validation", "normalize_payload", "validate_create", "validate_update", "ValidationError", "DuplicateIPError", "allowed_device_types"], "state": 2, "file_id": 24, "knowledge_revision": 50, "git_revision": "", "ctags": [{"_type": "tag", "name": "ALLOWED_DEVICE_TYPES", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/services/validation.py", "pattern": "/^ALLOWED_DEVICE_TYPES = {\"router\", \"switch\", \"server\", \"other\"}$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "DuplicateIPError", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/services/validation.py", "pattern": "/^class DuplicateIPError(Exception):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ValidationError", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/services/validation.py", "pattern": "/^class ValidationError(Exception):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_clean_str", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/services/validation.py", "pattern": "/^def _clean_str(value: Any, max_len: Optional[int] = None) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(value: Any, max_len: Optional[int] = None)"}, {"_type": "tag", "name": "_is_valid_ipv4", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/services/validation.py", "pattern": "/^def _is_valid_ipv4(ip: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(ip: str)"}, {"_type": "tag", "name": "_validate_common", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/services/validation.py", "pattern": "/^def _validate_common(data: Dict[str, Any], require_all_fields: bool) -> Tuple[Dict[str, Any], Di/", "language": "Python", "typeref": "typename:Tuple[Dict[str,Any],Dict[str,str]]", "kind": "function", "signature": "(data: Dict[str, Any], require_all_fields: bool)"}, {"_type": "tag", "name": "normalize_payload", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/services/validation.py", "pattern": "/^def normalize_payload(payload: Dict[str, Any]) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(payload: Dict[str, Any])"}, {"_type": "tag", "name": "require", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/services/validation.py", "pattern": "/^    def require(field: str) -> bool:$/", "file": true, "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(field: str)", "scope": "_validate_common", "scopeKind": "function"}, {"_type": "tag", "name": "validate_create", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/services/validation.py", "pattern": "/^def validate_create(payload: Dict[str, Any]) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(payload: Dict[str, Any])"}, {"_type": "tag", "name": "validate_update", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/services/validation.py", "pattern": "/^def validate_update(payload: Dict[str, Any]) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(payload: Dict[str, Any])"}], "hash": "24e900c292846e192ba076c146f7bd87", "format-version": 4, "code-base-name": "NetworkWebApplication", "filename": "NetworkWebApplication/backend/services/validation.py", "fields": [{"name": "ALLOWED_DEVICE_TYPES = {\"router\", \"switch\", \"server\", \"other\"}", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"50": ""}]}