{"is_source_file": true, "format": "Python", "description": "This file contains integration tests for the device status API endpoints, using pytest and unittest.mock for mocking dependencies and HTTP client interactions.", "external_files": ["backend.services.ping.ping", "bson.ObjectId"], "external_methods": ["unittest.mock.patch", "pytest", "client.post", "client.get", "client.get_json", "client.status_code", "assert", "bson.ObjectId"], "published": [], "classes": [], "methods": [{"name": "_create_device(client, ip=\"203.0.113.10\")", "description": "Creates a device with default or specified IP address by posting to the API and returning relevant device data.", "scope": "", "scopeKind": ""}, {"name": "test_status_online_updates_device(mock_ping, client)", "description": "Tests that a device status updates appropriately when ping response indicates online status.", "scope": "", "scopeKind": ""}, {"name": "test_status_offline_and_invalid_id(mock_ping, client)", "description": "Tests device offline detection and handling of invalid device IDs.", "scope": "", "scopeKind": ""}, {"name": "test_status_not_found(client)", "description": "Tests API response when querying for a non-existent device ID.", "scope": "", "scopeKind": ""}], "calls": ["client.post", "client.get", "client.get_json", "mock_ping.return_value", "_create_device", "client.get", "assert", "ObjectId"], "search-terms": ["test_status_api", "integration test", "pytest", "mock_ping", "device status", "device API", "ping", "status endpoint"], "state": 2, "file_id": 53, "knowledge_revision": 113, "git_revision": "", "ctags": [{"_type": "tag", "name": "_create_device", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/tests/integration/test_status_api.py", "pattern": "/^def _create_device(client, ip=\"203.0.113.10\"):$/", "language": "Python", "kind": "function", "signature": "(client, ip=\"203.0.113.10\")"}, {"_type": "tag", "name": "test_status_not_found", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/tests/integration/test_status_api.py", "pattern": "/^def test_status_not_found(client):$/", "language": "Python", "kind": "function", "signature": "(client)"}, {"_type": "tag", "name": "test_status_offline_and_invalid_id", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/tests/integration/test_status_api.py", "pattern": "/^def test_status_offline_and_invalid_id(mock_ping, client):$/", "language": "Python", "kind": "function", "signature": "(mock_ping, client)"}, {"_type": "tag", "name": "test_status_online_updates_device", "path": "/home/kavia/workspace/code-generation/network-web-application-5256-5507/NetworkWebApplication/backend/tests/integration/test_status_api.py", "pattern": "/^def test_status_online_updates_device(mock_ping, client):$/", "language": "Python", "kind": "function", "signature": "(mock_ping, client)"}], "hash": "d3b85ae5e6110c5372ac80c079ebc534", "format-version": 4, "code-base-name": "NetworkWebApplication", "filename": "NetworkWebApplication/backend/tests/integration/test_status_api.py", "revision_history": [{"113": ""}]}